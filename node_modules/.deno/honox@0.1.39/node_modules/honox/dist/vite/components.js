import { jsx, jsxs } from "hono/jsx/jsx-runtime";
import { createContext, useContext } from "hono/jsx";
import { COMPONENT_NAME, DATA_SERIALIZED_PROPS, DATA_HONO_TEMPLATE } from "../constants";
const inIsland = Symbol();
const inChildren = Symbol();
const IslandContext = createContext({
  [inIsland]: false,
  [inChildren]: false
});
const HonoXIsland = ({
  componentName,
  Component,
  props
}) => {
  const { children, ...rest } = props;
  const islandState = useContext(IslandContext);
  return islandState[inChildren] || !islandState[inIsland] ? (
    // top-level or slot content
    /* @__PURE__ */ jsxs(
      "honox-island",
      {
        ...{ [COMPONENT_NAME]: componentName, [DATA_SERIALIZED_PROPS]: JSON.stringify(rest) },
        children: [
          /* @__PURE__ */ jsx(IslandContext.Provider, { value: { ...islandState, [inIsland]: true }, children: /* @__PURE__ */ jsx(Component, { ...props }) }),
          children && /* @__PURE__ */ jsx("template", { ...{ [DATA_HONO_TEMPLATE]: "" }, children: /* @__PURE__ */ jsx(IslandContext.Provider, { value: { ...islandState, [inChildren]: true }, children }) })
        ]
      }
    )
  ) : (
    // nested component
    /* @__PURE__ */ jsx(Component, { ...props })
  );
};
export {
  HonoXIsland
};
