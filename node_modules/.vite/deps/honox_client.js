import {
  COMPONENT_EXPORT,
  COMPONENT_NAME,
  DATA_HONO_TEMPLATE,
  DATA_SERIALIZED_PROPS,
  createElement,
  render
} from "./chunk-DP6ZANUO.js";

// node_modules/.deno/honox@0.1.39/node_modules/honox/dist/client/client.js
var createClient = async (options) => {
  const FILES = (options == null ? void 0 : options.ISLAND_FILES) ?? {
    ...import.meta.glob("/app/islands/**/[a-zA-Z0-9-]+.tsx"),
    ...import.meta.glob("/app/**/_[a-zA-Z0-9-]+.island.tsx"),
    ...import.meta.glob("/app/**/$[a-zA-Z0-9-]+.tsx")
  };
  const hydrateComponent = async (document2) => {
    const filePromises = Object.keys(FILES).map(async (filePath) => {
      const componentName = filePath;
      const elements = document2.querySelectorAll(
        `[${COMPONENT_NAME}="${componentName}"]:not([data-hono-hydrated])`
      );
      if (elements) {
        const elementPromises = Array.from(elements).map(async (element) => {
          var _a;
          element.setAttribute("data-hono-hydrated", "true");
          const exportName = element.getAttribute(COMPONENT_EXPORT) || "default";
          const fileCallback = FILES[filePath];
          const file = await fileCallback();
          const Component = await file[exportName];
          const serializedProps = (_a = element.attributes.getNamedItem(DATA_SERIALIZED_PROPS)) == null ? void 0 : _a.value;
          const props = JSON.parse(serializedProps ?? "{}");
          const hydrate = (options == null ? void 0 : options.hydrate) ?? render;
          const createElement2 = (options == null ? void 0 : options.createElement) ?? createElement;
          let maybeTemplate = element.childNodes[element.childNodes.length - 1];
          while ((maybeTemplate == null ? void 0 : maybeTemplate.nodeName) === "TEMPLATE") {
            const propKey = maybeTemplate.getAttribute(DATA_HONO_TEMPLATE);
            if (propKey == null) {
              break;
            }
            let createChildren = options == null ? void 0 : options.createChildren;
            if (!createChildren) {
              const { buildCreateChildrenFn } = await import("./runtime-5SGRH4ZI.js");
              createChildren = buildCreateChildrenFn(
                createElement2,
                async (name) => (await FILES[`${name}`]()).default
              );
            }
            props[propKey] = await createChildren(
              maybeTemplate.content.childNodes
            );
            maybeTemplate = maybeTemplate.previousSibling;
          }
          const newElem = await createElement2(Component, props);
          await hydrate(newElem, element);
        });
        await Promise.all(elementPromises);
      }
    });
    await Promise.all(filePromises);
  };
  const triggerHydration = (options == null ? void 0 : options.triggerHydration) ?? (async (hydrateComponent2) => {
    if (document.querySelector('template[id^="H:"], template[id^="E:"]')) {
      const { hydrateComponentHonoSuspense } = await import("./runtime-5SGRH4ZI.js");
      await hydrateComponentHonoSuspense(hydrateComponent2);
    }
    await hydrateComponent2(document);
  });
  await (triggerHydration == null ? void 0 : triggerHydration(hydrateComponent));
};
export {
  createClient
};
//# sourceMappingURL=honox_client.js.map
